name: Build and test

on:

  push:

    branches: [ "hamedgayou-patch-1" ]

    paths-ignore:

      - '**.md'

      - 'fastlane/**'

      - '.github/workflows/crowdin_contributors.yml'

  pull_request:

    branches: [ "main" ]

  workflow_dispatch: {}

jobs:

  build_apk:

    name: Build APK

    runs-on: ubuntu-latest

    steps:

      - name: Cancel previous runs

        uses: styfle/cancel-workflow-action@0.11.0

      - name: Checkout

        uses: actions/checkout@v3

        with:

          fetch-depth: 0

      - name: Set up JDK 11

        uses: actions/setup-java@v3

        with:

          java-version: '11'

          distribution: 'temurin'

      - name: Change Gradle wrapper permissions

        run: chmod +x ./gradlew

      - name: Restore cache

        uses: actions/cache@v3

        with:

          path: |

            ~/.gradle/caches

            ~/.gradle/wrapper

          

      - name: Assemble Debug

        if: ${{ github.ref != 'refs/heads/main' }}

        run: ./gradlew assembleDebug

        env:

          ReleaseAndroidIDE: false

          IDE_SIGNING_ALIAS: ${{ secrets.IDE_SIGNING_ALIAS }}

          IDE_SIGNING_AUTH_PASS: ${{ secrets.IDE_SIGNING_AUTH_PASS }}

          IDE_SIGNING_AUTH_USER: ${{ secrets.IDE_SIGNING_AUTH_USER }}

          IDE_SIGNING_KEY_PASS: ${{ secrets.IDE_SIGNING_KEY_PASS }}

          IDE_SIGNING_STORE_PASS: ${{ secrets.IDE_SIGNING_STORE_PASS }}

          IDE_SIGNING_URL: ${{ secrets.IDE_SIGNING_URL }}

      - name: Copy debug APK

        if: ${{ github.ref != 'refs/heads/main' }}

        run: cp app/build/outputs/apk/debug/**.apk ./

      - name: Assemble Release

        if: ${{ github.ref == 'refs/heads/main' }}

        run: ./gradlew assembleRelease

        env:

          ReleaseAndroidIDE: true

          IDE_SIGNING_ALIAS: ${{ secrets.IDE_SIGNING_ALIAS }}

          IDE_SIGNING_AUTH_PASS: ${{ secrets.IDE_SIGNING_AUTH_PASS }}

          IDE_SIGNING_AUTH_USER: ${{ secrets.IDE_SIGNING_AUTH_USER }}

          IDE_SIGNING_KEY_PASS: ${{ secrets.IDE_SIGNING_KEY_PASS }}

          IDE_SIGNING_STORE_PASS: ${{ secrets.IDE_SIGNING_STORE_PASS }}

          IDE_SIGNING_URL: ${{ secrets.IDE_SIGNING_URL }}

      - name: Copy release APK

        if: ${{ github.ref == 'refs/heads/main' }}

        run: cp app/build/outputs/apk/release/**.apk ./

      - name: Upload Debug APK

        if: ${{ github.ref != 'refs/heads/main' }}

        uses: actions/upload-artifact@v3

        with:

          name: apk-debug

          path: app-debug.apk

      - name: Upload Release APK

        if: ${{ github.ref == 'refs/heads/main' }}

        uses: actions/upload-artifact@v3

        with:

          name: apk-release

          path: app-release.apk

  unit_test_debug:

    name: Run local tests

    runs-on: ubuntu-latest

    steps:

      - name: Checkout

        uses: actions/checkout@v3

        with:

          fetch-depth: 0

      - name: Set up JDK 11

        uses: actions/setup-java@v3

        with:

          java-version: '11'

          distribution: 'temurin'

      - name: Change Gradle wrapper permissions

        run: chmod +x ./gradlew

      - name: Restore cache

        uses: actions/cache@v3

    

        uses: actions/upload-artifact@v3

        with:

          name: test-reports

          path: '**/build/reports/tests/'

  

    name: Test Tooling API implementation

    runs-on: ubuntu-latest

    steps:

      - name: Checkout

        uses: actions/checkout@v3

        with:

          fetch-depth: 0

      - name: Set up JDK 11

        uses: actions/setup-java@v3

        with:

          java-version: '11'

          distribution: 'temurin'

      - name: Change Gradle wrapper permissions

        run: chmod +x ./gradlew

      - name: Restore cache

        uses: actions/cache@v3

        uses: actions/upload-artifact@v3

        with:

          name: tooling-api-test-reports

          path: 'subprojects/tooling-api-impl/build/reports/tests/'

  publish:

    name: Publish release

    runs-on: ubuntu-latest

    needs: [build_apk, unit_test_debug, test_tooling_api]

    if: ${{ always() && github.event_name != 'pull_request' && github.ref == 'refs/heads/main' && needs.build_apk.result == 'success' && needs.unit_test_debug.result == 'success' && needs.test_tooling_api.result == 'success' }}

    steps:

      - name: Checkout

        uses: actions/checkout@v3

        with:

          fetch-depth: 0

      - name: Set up JDK 11

        uses: actions/setup-java@v3

        with:

          java-version: '11'

          distribution: 'temurin'

      - name: Download APKs

        uses: actions/download-artifact@v3

        with:

          name: apk-release

      - name: Change Gradle wrapper permissions

        run: chmod +x ./gradlew

            ~/.gradle/wrapper

      - name: Publish release

        run: ./gradlew nyxMake nyxMark nyxPublish release --stacktrace

        env:

          ReleaseAndroidIDE: true

    

      - name: Archive Nyx state file

        uses: actions/upload-artifact@v3

        if: ${{ always() }}

        with:

          name: .nyx-state-${{ github.job }}.json

          path: build/nyx-state.json
